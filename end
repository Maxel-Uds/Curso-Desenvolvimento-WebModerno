[33mf7cbd06[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m Update README.md
[33m2708ea5[m Padr√£o Middleware ou cadeia de responsabilidades
[33m709cfc6[m Escrevendo em arquivos com o fs.writeFile( )
[33m18bb0db[m Lendo arquivos de forma s√≠ncrona e ass√≠ncrona
[33me127887[m npm start, e npm run [script] adicionados
[33m754f855[m Passagem de par√¢metros entre m√≥dulos
[33m7217135[m Escopo da palavra THIS no contexto de m√≥dulos
[33m20bf22c[m Objeto Global do Node
[33m1f1d926[m Inst√¢ncia √∫nica Vs inst√¢ncia nova
[33m1052541[m Arquivo package.json e desafio resolvido
[33m3cccb87[m Comandos importantes do npm
[33m78fa1ac[m Sistemas de m√≥dulos: Exports
[33maee03a7[m Sistema de m√≥dulos: Require
[33m519a167[m Usando m√≥dulos de terceiros e instalando bibliotecas
[33m36eed61[m Introdu√ß√£o aos m√≥dulos do Node e exporta√ß√£o de m√≥dulos
[33ma450ade[m Fun√ß√£o flatMap
[33m9ee8e6f[m Fun√ß√£o .concat()
[33mb757600[m C√≥digo imperativo VS c√≥digo declarativo
[33mc12e4ff[m Reduce parte 3
[33m93c3e9b[m Reduce parte 2
[33m7651bda[m Reduce parte 1
[33m9e43068[m Filter parte 2
[33m599a071[m Filter parte 1
[33m1657cf7[m Map parte 3
[33ma22637e[m Map parte 2
[33m2651ea3[m Map parte 1
[33m3af8ca5[m Update foreach2.js
[33mabbda89[m Foreach parte 2
[33meb21b3a[m Foreach parte 1
[33m79ce033[m Fun√ß√µes importantes do array
[33mfde907e[m Introdu√ß√£o ao array e fun√ß√µes b√°sicas
[33m8d220d8[m Classe parte 2
[33me1515ba[m Classe parte 1
[33md76a999[m JSON vs Objeto
[33m589389f[m Meios de evitar a mudan√ßa de objetos
[33m8774805[m Heran√ßa parte 6
[33mbdf12b3[m Heran√ßa parte 5
[33mf00a935[m Heran√ßa parte 4
[33m78b57a4[m Heran√ßa parte 3
[33mb8c4df6[m Heran√ßa parte 2
[33m6566d24[m Heran√ßa parte 1
[33mff76cf7[m Fun√ß√µes importantes do objeto
[33m0419717[m Usando get e set para acessar e atribuir valores
[33mf263f75[m Nota√ß√£o literal (mudan√ßas do ES 2015)
[33m5ab68b1[m Objetos constantes
[33m2b95d6a[m Formas de criar objetos em js
[33mfceb814[m Revis√£o sobre objeto
[33m65c1c43[m Conceitos sobre Orienta√ß√£o a Objetos
[33mb8d682b[m Invoca√ß√£o de fun√ß√µes usando call e apply
[33m4cf0fc3[m IIFE
[33m5f05f18[m Classe vs Factory
[33m6f5e5ac[m Fun√ß√£o factory parte 2
[33m64a5510[m Fun√ß√£o factory parte 1
[33ma8d84df[m Closure em fun√ß√µes JS
[33m28d49e4[m Contexto l√©xico de declara√ß√£o da fun√ß√£o
[33mc6e597f[m Tipos de declara√ß√µes de fun√ß√µes
[33m2b8a85a[m Fun√ß√µes construtoras
[33m8171fc4[m Fun√ß√µes de Callback
[33m7bf6685[m Fun√ß√µes an√¥nimas em JS
[33me4d2124[m Arrow Functions
[33m0317026[m Amarrando o 'This' com Bind e Self
[33md5ecaea[m Par√¢metros padr√£o com ES 2015
[33ma39f49f[m Usando o 'arguments'
[33med469dd[m First-Class Object
[33m1c7b924[m Estrutura FOR/IN
[33mcf7280e[m Estrutura FOR
[33m8a4fcb9[m Estrutura DO/WHILE
[33m5c61b47[m Estrutura WHILE
[33m5212480[m Estrutura SWITCH
[33m3b864d4[m Estrutura IF/ELSE_IF
[33m1618466[m Estrutura IF/ELSE
[33m3886e28[m Usando IF parte 2
[33mab304fc[m Usando o IF parte 1
[33m9bd46ec[m Operadores: l√≥gicos
[33mf87e619[m Operadores: relacionais
[33mcce3c83[m Operadores: aritm√©ticos
[33mdabb73a[m Operadores: destructuring parte 4
[33m73e4820[m Operadores: destructuring parte 3
[33m488ad46[m Operadores: destructuring parte 2
[33m6a8cb9f[m Operadores: destructuring parte 1
[33m9e390c8[m Operadores: atribui√ß√£o
[33md5cf6ee[m Chave/Valor
[33ma7352e1[m Fun√ß√£o vs Objeto
[33ma197842[m Exemplo de hoisting
[33m257b0d1[m Usando let em loop parte 2
[33m0a1a9b8[m Usando var em loop parte 2
[33mb0e6dfb[m Usando o let em loop parte 1
[33m63001ba[m Usando Var em um loop
[33mc55202d[m Usando o Let
[33m8883c70[m Usando Var parte 2
[33m22f8774[m Usando o Var parte 1
[33m3b90d3d[m Fun√ß√µes b√°sicas parte 2
[33m7e37074[m Fun√ß√µes b√°sicas parte 1
[33me61de8c[m Exemplo de fun√ß√µes
[33mba3e958[m Conceitos de null e undefined
[33m09f8860[m Object em JS
[33m0a8a2e5[m Arrays em JS
[33m5f275cc[m tipos booleanos
[33m9434404[m Template string
[33mbbf828c[m Strings e suas fun√ß√µes
[33m410db0a[m Math do tipo object
[33m20f3e3c[m Tipo e fun√ß√£o Number
[33m429a29f[m Tipagem fraca
[33m2011945[m Let, Var e Const
[33m994a7c4[m Exemplo de organiza√ß√£o de um c√≥digo em JS
[33mcf28b98[m Update README.md
[33m8f5e0b8[m Initial commit
